<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:model="model.*"
		xmlns:views="views.*"
		backgroundColor="0xffffff"
		title="ООО ''Управляющая компания Первореческого района''"
		viewActivate="activeHandler();"
		>
	
	<fx:Script>
		<![CDATA[
			
			import model.MenuItemModel;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.transitions.SlideViewTransition;
			
			[Bindable]
			private var menuDataProvider:ArrayCollection = new ArrayCollection;
			
			private function activeHandler():void
			{
				for( var i:uint = 0; i < 21; i++)
				{
					var item:MenuItemModel = new MenuItemModel;
					item.data = "" + ( i+ 1 );
					item.name = item.data as String;
					menuDataProvider.addItem(item);
				}
				menu.dataProvider = menuDataProvider;
				
				mainContainer.visible = true;
				fade.play();
				
			}
			
			private function backClickHandler(event:MouseEvent):void
			{
				this.navigator.popToFirstView(slide_back);
			}
			
			private function menuChangeHandler(event:IndexChangeEvent):void
			{
				this.navigator.pushView(SelectUKView, List(event.currentTarget).selectedItem, null, slide);
			}
			
			private function menuRenderHandler():void
			{
				var maximum:Number = menu.dataGroup.contentHeight - menu.height;
				if( maximum > 0 )
				{
					scroll.maximum = maximum;
					scroll.visible = true;
				}
				else
				{
					scroll.visible = false;
				}			
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:SlideViewTransition id="slide_back" direction="right" duration="1000"/>
		<s:SlideViewTransition id="slide" duration="1000"/>
		<s:Fade id="fade" target="{mainContainer}" alphaFrom="0" alphaTo="1" duration="2000"/>
		
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button label="Назад" fontSize="24" click="backClickHandler(event)" height="60" width="120" skinClass="spark.skins.mobile.BeveledBackButtonSkin"/>
	</s:navigationContent>
	
	<s:VGroup 
		gap="40" paddingBottom="50" paddingLeft="200" paddingRight="200"
		paddingTop="30" depth="10"
		horizontalCenter="0" bottom="0" top="0"
		>
		
		<s:Label fontSize="35" text="Список управляющих компаний:" color="0xffffff"/>
		
		<s:Spacer height="20"/>
		
		<s:Group id="mainContainer" width="100%" height="100%" visible="false">
			<s:VGroup height="100%" gap="20" horizontalCenter="0">
				<s:HGroup id="menuHeadContainer" width="100%" gap="20">
					<s:Group width="110">
						<s:Label text="Номер" horizontalCenter="0" fontSize="24"/>
					</s:Group> 
					<s:Rect width="5" height="90%">
						<s:fill>
							<s:SolidColor color="0xffffff"/>
						</s:fill>
					</s:Rect>
					<s:Label width="100%" text="Обслуживаемые дома" fontSize="24"/>
				</s:HGroup>
				<s:HGroup height="100%" width="100%">
					<s:List id="menu" width="1200" height="100%" borderVisible="false" change="menuChangeHandler(event);"
							fontSize="22" skinClass="skin.ListSkin" render="menuRenderHandler();" 
							>
						<s:layout>
							<s:VerticalLayout gap="25" verticalScrollPosition="{scroll.value}"/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:ItemRenderer width="100%" height="100%" autoDrawBackground="false">
									
									<fx:Script>
										<![CDATA[
											
											import mx.collections.ArrayCollection;
											import mx.events.FlexEvent;
											
											import spark.components.gridClasses.GridItemRenderer;
											import spark.utils.DataItem;
											
											[Bindable]
											private var tableData:ArrayCollection;
											
											override public function set data(value:Object):void
											{	
												super.data = value;
												var file:File = File.applicationDirectory.resolvePath("data/UK/" + value.name + "/builds.txt");
												if( !file.exists) return;
												var fs:FileStream = new FileStream();
												fs.open(file, FileMode.READ);
												var text:String = fs.readUTFBytes(fs.bytesAvailable);
												var lines:Array = text.split("\n");
												tableData = new ArrayCollection;
												for( var i:uint = 0 ; i < lines.length ; i++)
												{
													var line:String = lines[i];
													var index:int = line.indexOf(":"); 
													if( line && line.length > 0 && index != -1 ){
														var item:DataItem = new DataItem;
														item.street = line.substring(0, index);
														item.building = line.substring(index + 1);
														tableData.addItem(item);
													}
												}
											}
											
										]]>
									</fx:Script>
									
									<s:Group width="100%" height="100%">
										<s:Rect width="100%" height="100%" left="4" radiusX="20" top="1">
											<s:stroke>
												<s:SolidColorStroke color="0xffffff" weight="4"/>
											</s:stroke>
											<s:fill>
												<s:SolidColor alpha=".3" color="0xffffff"/>
											</s:fill>
										</s:Rect>
										<s:HGroup width="100%" height="100%" gap="20" paddingBottom="20" paddingTop="24" paddingRight="20" verticalAlign="middle">
											<s:Group width="110" height="110" fontSize="90">
												<s:Label text="{data.name}" horizontalCenter="10" verticalCenter="5"/>
											</s:Group>
											<s:Rect width="5" height="99%" >
												<s:fill>
													<s:SolidColor color="0xffffff"/>
												</s:fill>
											</s:Rect>
											<s:DataGroup width="100%" dataProvider="{tableData}">
												<s:layout>
													<s:VerticalLayout gap="8"/>
												</s:layout>
												<s:itemRenderer>
													<fx:Component>
														<s:ItemRenderer width="100%" autoDrawBackground="false">
															<s:HGroup width="100%" height="100%" gap="10" fontSize="30">
																<s:Label width="300" height="100%" text="{data.street}"/>
																<s:Label width="100%" height="100%" text="{data.building}"/>
															</s:HGroup>
														</s:ItemRenderer>
													</fx:Component>
												</s:itemRenderer>
											</s:DataGroup>
										</s:HGroup>
									</s:Group>
									
								</s:ItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:List>
					<s:VScrollBar id="scroll" height="100%" skinClass="skin.VerticalScrollBarSkin"/>
				</s:HGroup>
			</s:VGroup>
		</s:Group>
	</s:VGroup>
	
	<s:SWFLoader source="@Embed(source='line.swf')" verticalCenter="0" horizontalCenter="0" scaleX="2" scaleY="2"/>
	
</s:View>