<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:model="model.*"
		xmlns:views="views.*"
		backgroundColor="0xffffff" 
		viewActivate="activeHandler();">
	
	<fx:Script>
		<![CDATA[
			import model.MenuItemModel;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.transitions.SlideViewTransition;
			import spark.transitions.SlideViewTransitionMode;
			
			[Bindable]
			private var menuDataProvider:ArrayCollection = new ArrayCollection;
			private var item:MenuItemModel;
			
			private function activeHandler():void
			{
				item = data as MenuItemModel;
				title = item.name;
				var file:File = File.applicationDirectory.resolvePath("data/Building/" + item.data);
				var buildingList:Array = file.getDirectoryListing();
				buildingList.sort(function compareFunction(a:File, b:File):int
				{
					var nA:Number = parseInt(a.name);
					var nB:Number = parseInt(b.name);
					if( nA > nB)
					{
						return 1;
					}
					else
						if( nA < nB)
						{
							return -1;
						}
						else
						{
							return 0;
						}
				}
				)
				for( var i:uint = 0; i < buildingList.length; i++)
				{
					file = File(buildingList[i]);
					if( file.isDirectory && !file.isSymbolicLink )
					{
						var item:MenuItemModel = new MenuItemModel(file.name);
						menuDataProvider.addItem(item);
					}
				}
				menu.dataProvider = menuDataProvider;
				menu.validateNow();
				var maximum:Number = menu.dataGroup.contentHeight - menu.height;
				if( maximum > 0 )
				{
					scroll.maximum = maximum;
				}
				else
				{
					scroll.visible = false;
				}
				mainContainer.visible = true;
				fade.play();
			}
			
			private function backClickHandler(event:MouseEvent):void
			{
				this.navigator.popView(slide_back);
			}
			
			private function menuChangeHandler(event:IndexChangeEvent):void
			{
				this.navigator.pushView(SelectBuildingView, {parent:item, data: List(event.currentTarget).selectedItem}, null, slide);
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<s:SlideViewTransition id="slide_back" direction="right" duration="1000"/>
		<s:SlideViewTransition id="slide" duration="1000"/>
		<s:Fade id="fade" target="{mainContainer}" alphaFrom="0" alphaTo="1" duration="2000"/>
		
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button label="Назад" fontSize="24" click="backClickHandler(event)" height="60" width="120" skinClass="spark.skins.mobile.BeveledBackButtonSkin"/>
	</s:navigationContent>
	
	<s:VGroup gap="40" paddingBottom="40" paddingLeft="200" paddingRight="200"
			  paddingTop="30" horizontalCenter="0" depth="100">
		
		<s:Label text="Список домов:" fontSize="35" color="0xffffff"/>
		
		<s:Group width="100%" height="100%" id="mainContainer" visible="false">
			<s:HGroup height="100%" horizontalCenter="0">
				<s:List id="menu" height="100%" borderVisible="false"
						change="menuChangeHandler(event);"
						fontSize="22"
						skinClass="skin.ListSkin"
						>
					<s:layout>
						<s:TileLayout verticalGap="10" horizontalGap="10" verticalScrollPosition="{scroll.value}" requestedColumnCount="4"/>
					</s:layout>
					<s:itemRenderer>
						<fx:Component>
							<s:ItemRenderer 
								width="100%" height="100%" autoDrawBackground="false"
								>
								<s:Button width="150" height="150" label="{data.name}" fontSize="64"/>
							</s:ItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:List>
				<s:VScrollBar id="scroll" height="100%" skinClass="skin.VerticalScrollBarSkin"/>
			</s:HGroup>
		</s:Group>
	</s:VGroup>
	
	<s:SWFLoader source="@Embed(source='house.swf')" verticalCenter="0" horizontalCenter="0" scaleX="2" scaleY="2"/>
	
</s:View>